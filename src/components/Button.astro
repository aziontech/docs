---
const { href, text } = Astro.props;
// Wrap in <span> because Houdini is disabled for a[href] for security

const { variant = 'primary' } = Astro.props;
---

<a class:list={[`btn-component btn-component-icon btn-component-${variant}`]} {href} target="_blank" rel="noopener">
	{text}
	<i class="icon icon-right-arrow icon-animation-primary">
		<svg width="7" height="11" viewBox="0 0 7 11" fill="none" xmlns="http://www.w3.org/2000/svg">
			<path
				fill-rule="evenodd"
				clip-rule="evenodd"
				d="M6.51256 5.28044C6.46375 5.16006 6.39052 5.04726 6.29289 4.94963L2.05025 0.706995C1.65972 0.316471 1.02656 0.316471 0.636034 0.706995C0.24551 1.09752 0.245509 1.73068 0.636034 2.12121L4.17157 5.65674L0.636035 9.19227C0.245511 9.58279 0.245511 10.216 0.636035 10.6065C1.02656 10.997 1.65973 10.997 2.05025 10.6065L6.29289 6.36385L6.29289 6.36384C6.58579 6.07095 6.65901 5.64157 6.51256 5.28044Z"
			></path>
		</svg>
	</i>
	<i class="icon icon-right-arrow icon-animation-secondary">
		<svg width="7" height="11" viewBox="0 0 7 11" fill="none" xmlns="http://www.w3.org/2000/svg">
			<path
				fill-rule="evenodd"
				clip-rule="evenodd"
				d="M6.51256 5.28044C6.46375 5.16006 6.39052 5.04726 6.29289 4.94963L2.05025 0.706995C1.65972 0.316471 1.02656 0.316471 0.636034 0.706995C0.24551 1.09752 0.245509 1.73068 0.636034 2.12121L4.17157 5.65674L0.636035 9.19227C0.245511 9.58279 0.245511 10.216 0.636035 10.6065C1.02656 10.997 1.65973 10.997 2.05025 10.6065L6.29289 6.36385L6.29289 6.36384C6.58579 6.07095 6.65901 5.64157 6.51256 5.28044Z"
			></path>
		</svg>
	</i>
</a>

<style lang="scss">
	.btn-component {
		font-family: 'Roboto';
		display: inline-block;
		text-transform: lowercase;
		padding: 1rem;
		font-size: #{'max(min(1vw, 1rem), 0.875rem)'};
		line-height: 1rem;
		position: relative;
		border-radius: 2px;
		border: solid 2px transparent;
		transition: all 0.1s ease-in;

		&:hover {
			.icon {
				&.icon-animation-primary {
					right: -0.2rem;
					transition: right cubic-bezier(0.23, 1.2, 0.32, 1) 1400ms,
						opacity cubic-bezier(0.23, 1.2, 0.32, 1) 1400ms;
					opacity: 0;
				}

				&.icon-animation-secondary {
					opacity: 1;
					right: 0.6rem;
				}
			}

			cursor: pointer;
		}

		&-icon {
			padding-left: 1rem;
			padding-right: 2rem;
		}

		.icon {
			position: absolute;
			right: 1rem;

			&-right-arrow {
				margin-left: 0.5rem;
				top: calc(50% - 8px);
			}

			&-search {
				position: relative;
				top: 0.25rem;
			}

			&.icon-animation-secondary {
				transition: all ease 350ms;
			}
		}

		&-primary {
			color: var(--color-gray-90);
			background-color: var(--color-orange);
			border-color: var(--color-orange);
			.icon {
				svg {
					fill: var(--color-gray-90);
				}
			}

			&:hover {
				color: var(--color-orange);
				background-color: var(--theme-hover-button);
				border-color: var(--theme-hover-button);

				.icon {
					svg {
						fill: var(--color-orange);
					}
				}
			}
		}

		&-secondary {
			border-color: var(--theme-border);
			color: var(--theme-text);
			.icon {
				svg {
					fill: var(--theme-text);
				}
			}

			&:hover {
				border-color: var(--color-orange);
				color: var(--color-orange);

				.icon {
					svg {
						fill: var(--color-orange);
					}
				}
			}
		}
	}
</style>
