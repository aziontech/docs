---
import type { CollectionEntry } from 'astro:content';
import { SITE_URL } from '~/consts';


interface TranslatedProps {
	slug: string;
	lang: string;
}

export interface Props {
	content: CollectionEntry<'docs'>['data'];
	canonicalURL: URL;
	translatedPages: TranslatedProps[] | undefined;
}


import { OPEN_GRAPH } from '~/config';
import { normalizeLangTag } from '~/i18n/bcp-normalize';
import { useTranslations } from '~/i18n/util';
import { getLanguageFromURL } from '~/util';
import { getOgImageUrl } from '~/util/getOgImageUrl';

const {  content, canonicalURL, translatedPages } = Astro.props;
const defaultPage = translatedPages?.find(item => item.lang === 'en') || translatedPages?.find(item => item.lang === 'pt-br');
const isOgImageGenerated = getOgImageUrl(content.title, !!Astro.params.fallback);

const t = useTranslations(Astro);
const canonicalImageSrc = new URL(`${SITE_URL}/${(isOgImageGenerated ? isOgImageGenerated : 'static/images/v3/open-graph/og-home.png')}`);
const lang = getLanguageFromURL(canonicalURL?.pathname || '/');
const bcpLang = normalizeLangTag(lang);
const ogLocale = bcpLang.replace(/-/g, '_');
---

<link rel="canonical" href={canonicalURL} />

{
  translatedPages ?
    translatedPages.flatMap(({ slug, lang }) => [
      <link rel="alternate" href={`${SITE_URL}/${lang}/${slug}/`} hreflang={lang} />,
      ...(lang === "pt-br" ? [<link rel="alternate" href={`${SITE_URL}/${lang}/${slug}/`} hreflang="pt" />] : [])
    ])
  : null
}

{
  defaultPage ? (
    <link rel="alternate" href={`${SITE_URL}/${defaultPage.lang}/${defaultPage.slug}/`} hreflang="x-default" />
  ) : null
}


<!-- OpenGraph Tags -->
<meta property="og:title" content={content.title ?? t('site.title')} />
<meta property="og:type" content="article" />
<meta property="og:url" content={canonicalURL} />
<meta property="og:locale" content={ogLocale} />
<meta property="og:image" content={canonicalImageSrc} />
<meta
	name="description"
	property="og:description"	
	content={content.description ? content.description : t('site.description')}
/>
<meta name="keywords" content={content.meta_tags} />
<meta property="og:site_name" content={t('site.title')} />

<!-- Twitter Tags -->
<meta name="twitter:card" content="summary_large_image" />
<meta name="twitter:site" content={OPEN_GRAPH.twitter} />
<meta name="twitter:title" content={content.title ?? t('site.title')} />
<meta
	name="twitter:description"
	content={content.description ? content.description : t('site.description')}
/>
<meta name="twitter:image" content={canonicalImageSrc} />

<!-- FB VERIFICATION  -->
<meta name="facebook-domain-verification" content="8nux2xhl21yvil08vezdvwfeuizhoz" /> 
<!-- GSC PROPERTY VERIFICATION  -->
<meta name="google-site-verification" content="k-705RU8i8siCetgFIG7b06D7b_4vW0BXV0jqip8WRA" />
<!--META TAG only www property -->
<meta name="google-site-verification" content="rWfdbs8jdleAYNe8PQbQVEJ6v3NJDh3FjibG45nsXKk" />
