---
import SkipToContent from './SkipToContent.astro';
import SidebarToggle from './SidebarToggle';
import Search from './Search.astro';
import Navigation from './Menus';
import ThemeToggleButton from './ThemeToggleButton';
import { getLanguageFromURL } from '../../util';
import { getHeaderMenuStrings, useTranslations, getSearchTranslations } from '../../i18n/util';
import AlgoliaSearch from './AlgoliaSearch';
import TopBar from './TopBar.astro';

const { currentPage } = Astro.props;
const lang = currentPage && getLanguageFromURL(currentPage);
const headerMenuStrings = getHeaderMenuStrings(Astro);
const searchTranslations = getSearchTranslations(Astro);
const t = useTranslations(Astro);
---

<AlgoliaSearch lang={lang} client:only="preact" />
<header id="azheader">
	<SkipToContent />
	<TopBar lang/>
	<nav class="nav-wrapper" aria-label={t('navbar.a11yTitle')}>
		<div dir="ltr" lang="en" class="logo flex">
			<a href={`https://www.azion.com/${lang}/`}>
				<svg viewBox="0 0 120 24" fill="none" xmlns="http://www.w3.org/2000/svg">
					<path
						fill-rule="evenodd"
						clip-rule="evenodd"
						d="M68.8751 0L64.3906 23.4146H87.711L92.1955 0H68.8751ZM72.5179 4.42392H86.8522L84.0623 18.9907H69.728L72.5179 4.42392Z"
						fill="#F3652B"></path>
					<path
						fill-rule="evenodd"
						clip-rule="evenodd"
						d="M60.0001 0L55.6094 23.4146H59.9992L64.3899 0H60.0001Z"
						fill="#F3652B"></path>
					<path
						fill-rule="evenodd"
						clip-rule="evenodd"
						d="M24.3824 0L0.654522 19.9761L0 23.4146H3.41853L21.7987 7.94855L18.8361 23.4146H23.3197L27.8049 0H24.3824Z"
						fill="#F3652B"></path>
					<path
						fill-rule="evenodd"
						clip-rule="evenodd"
						d="M115.516 0L113.526 10.3871L117.148 14.8895L120 0H115.516ZM96.6798 0L92.1953 23.4146H96.6815L99.755 7.36298L112.711 23.4146H115.516L116.069 20.5482L99.4841 0H96.6798Z"
						fill="#F3652B"></path>
					<path
						fill-rule="evenodd"
						clip-rule="evenodd"
						d="M32.2893 0L31.4419 4.42401H46.9283L28.4682 19.9674L27.8047 23.4146H51.125L51.9724 18.9906H36.4861L54.9502 3.44385L55.6096 0H32.2893Z"
						fill="#F3652B"></path>
				</svg>
			</a>
			<Navigation data={headerMenuStrings.nav} />
		</div>
		<ThemeToggleButton
			client:visible
			labels={{ useLight: t('themeToggle.useLight'), useDark: t('themeToggle.useDark') }}
			isInsideHeader={true}
		/>
		<Search {lang} t={searchTranslations} />
		<SidebarToggle client:idle />
	</nav>
</header>

<script>
	const handleHeaderPositionAfterScroll = () => {
		let timeout = false;
		let scrollDirection = null;
		let scrollPosition = 0;
		let position: String | null = null;
		const header: HTMLElement | null = document.getElementById('azheader');
		const sidebars = document.querySelectorAll('.sidebar');

		const headerPositionHandler = () => {
			if (!header) return
			if (timeout) return;
			timeout = true;

			const headerHeight = header.offsetHeight
			setTimeout(function () {
				scrollDirection =
					document.body.getBoundingClientRect().top > scrollPosition ? 'up' : 'down';
				scrollPosition = document.body.getBoundingClientRect().top;
				if (scrollDirection === 'down' && position !== 'down') {
					position = 'down';
					header.style.top = '-200px';

					sidebars.forEach((item) => {
						(item as HTMLElement).style.top = "0px"
					})
				} else if (scrollDirection === 'up' && position !== 'up') {
					position = 'up';
					header.style.top = '0px';

					sidebars.forEach((item) => {
						(item as HTMLElement).style.top = `${header.offsetHeight}px`
					})
				}
				timeout = false;
			}, 200);
		};

		return headerPositionHandler;
	};

	const init = handleHeaderPositionAfterScroll()

	window.addEventListener('scroll', () => init());
</script>

<style lang="scss">
	header {
		position: sticky;
		left: 0;
		top: 0;
		right: 0;
		// max-height: var(--theme-navbar-height);
		z-index: 11;
		padding: 0 0 0.75rem;
		background-color: var(--theme-bg-variant);
		display: flex;
		flex-direction: column;
		align-items: center;
		justify-content: left;
		overflow: hidden;
		transition: all 0.2s ease-in;
	}

	ul,
	li {
		all: inherit;
		flex-grow: 0;
	}

	.nav-wrapper {
		display: flex;
		align-items: center;
		justify-content: center;
		gap: 0.75rem;
		width: 100%;
		padding-inline: 1rem;
	}

	/* If the device is likely to show a scrollbar gutter, reserve space for it */
	@media (hover: hover) {
		.nav-wrapper {
			max-width: calc(100vw - 1.1rem);
		}
	}

	.logo {
		display: flex;
		justify-content: flex-start;
		font-size: 1rem;
		flex-grow: 1;
		flex-shrink: 0;
		font-weight: 600;
		line-height: 1;
		color: hsla(var(--color-base-white), 100%, 1);
		text-decoration: none;
		gap: 2rem;
	}

	:global([dir='rtl']) .logo {
		justify-content: flex-end;
	}

	.logo a {
		padding: 0.5em 1em 0.5em 0.25em;
		margin: -0.5em -0.25em;
	}

	.logo svg {
		height: clamp(1rem, 0.75rem + 1.25vw, 1.375rem);
		width: auto;
		display: block;
		color: var(--theme-accent);
	}

	.logo .hover {
		opacity: 0;
	}
	.logo a {
		transition: transform 180ms ease-out;
	}

	.logo a:focus:not(:focus-visible) {
		outline: none;
	}

	.logo h1 {
		font: inherit;
		color: inherit;
		margin: 0;
	}

	.astro {
		overflow: hidden;
		width: 41px;
	}

	.docs {
		display: none;
	}

	@media (min-width: 20em) {
		.docs {
			display: inherit;
			max-width: 80px;
		}
	}

	@media (min-width: 23.5em) {
		.docs {
			max-width: none;
		}
		.nav-wrapper {
			gap: 1rem;
		}
	}

	@media (min-width: 50em) {
		header {
			padding: 0;
		}
		.astro {
			width: auto;
		}
	}

	@media (forced-colors: active) {
		.text {
			fill: LinkText;
		}
		.docs-path {
			fill: ActiveText;
		}
	}
</style>
