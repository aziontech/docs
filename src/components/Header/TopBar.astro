---
import UIString from '../UIString.astro';
import { useTranslations } from '../../i18n/util'

const { lang } = Astro.props
---
<section id="top-bar" class="top-bar hidden">
	<div class="top-bar-wrapper">
		<div class="content">
			<small class="d-none-medium-up">
				<span class="flag flag-primary">
					News: 
				</span> 
				<UIString key="topbar.message" />
				<a href={useTranslations(Astro)('topbar.link')} target="_blank" title={useTranslations(Astro)('topbar.message')}>
					<UIString key="topbar.cta" />
				</a>
			</small>
		</div>
		<div id="closeTopBar" class="close-button">
			<svg
				width="12"
				height="12"
				viewBox="0 0 12 12"
				fill="none"
				xmlns="http://www.w3.org/2000/svg"
			>
				<path
					fill-rule="evenodd"
					clip-rule="evenodd"
					d="M12 1.20857L10.7914 0L6 4.79143L1.20857 0L0 1.20857L4.79143 6L0 10.7914L1.20857 12L6 7.20857L10.7914 12L12 10.7914L7.20857 6L12 1.20857Z"
					fill="white"></path>
			</svg>
		</div>
	</div>
</section>

<script>
	function topBarHasBeenClosed() {
		sessionStorage.setItem('topBarHasBeenClosed', 'true');
		hideTopBar()
	}

	function hideTopBar() {
		const topBarElement = document.getElementById('top-bar');
		topBarElement?.remove();
	}

	function showTopBar() {
		const topBarElement = document.getElementById('top-bar');
		topBarElement?.classList.remove('hidden');
	}

	(function isTopBarClosed() {
		const isClosed = sessionStorage.getItem('topBarHasBeenClosed');

		if (isClosed == 'true') {
			hideTopBar()
			return;
		}

		sessionStorage.setItem('topBarHasBeenClosed', 'false');
		document.getElementById('closeTopBar')?.addEventListener('click', () => {
			topBarHasBeenClosed();
		});

		showTopBar()
	})();
</script>

<style lang="scss">
	span.flag {
		padding: 0.25rem 0.5rem;
		border: 1px solid transparent;
		border-radius: 100px;
		&-primary {
			border-color: var(--color-orange);
		}
	}

	.hidden {
		display: none;
	}

	@keyframes fadeOut {
		to {
			visibility: hidden;
		}
	}

	.top-bar {
		position: sticky;
		width: 100%;
		transition: all 0.2s ease-in;
		background: var(--color-gray-80);
		color: var(--color-gray-20);
		&-wrapper {
			display: grid;
			grid-template-columns: auto 50px;
			padding: 0.75rem 1rem;
			.content,
			.close-button {
				display: flex;
				align-items: center;
			}
			.content {
				line-height: 150%;
			}
			.close-button {
				justify-content: flex-end;
				cursor: pointer;
			}
			.flag {
				margin-right: 0.5rem;
			}
		}
	}
</style>
