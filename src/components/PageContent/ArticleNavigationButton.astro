---
import UIString from '../UIString.astro';
import { isURL } from "~/util";

import CardBaseClickable from 'azion-webkit/cardbaseclickable';
import CardDescription from 'azion-webkit/carddescription';

export interface Props {
	item: { link: string; text: string };
	rel: 'next' | 'prev';
}

const { item, rel } = Astro.props as Props;

const createLink = (link: string): string => {
	if (isURL(link)) return link

	return new URL(item.link, Astro.site).pathname
}
---
<CardBaseClickable
	hover="outlined"
	spacing="base"
	rel={rel}
	target={isURL(item.link) ? '_blank' : '_self'}
	link={createLink(item.link)}
	title={item.text}
	class={rel === 'next' ? 'rtl w-full text-right items-end' : 'ltr w-full text-left'}
>
	<Fragment slot="content">
		<div class={rel === 'next' ? 'flex gap-3 justify-end w-full items-center' : 'flex gap-3 items-center'}>
			{
				rel === 'prev' && (
				<span class="w-11 h-11 flex flex-shrink-0 justify-center items-center rounded-md surface-200">
					<i class="pi pi-arrow-left"></i>	
				</span>
				)
			}
			<div>
				<CardDescription>
					<UIString key={rel === 'next' ? 'articleNav.nextPage' : 'articleNav.prevPage'} />
				</CardDescription>
				<strong class="text-medium block">
					{item.text}
				</strong>
			</div>
			{
				rel === 'next' && (
					<span class="w-11 h-11 flex flex-shrink-0 justify-center items-center rounded-md surface-200">
						<i class="pi pi-arrow-right"></i>	
					</span>
				)
			}
		</div>
	</Fragment>
</CardBaseClickable>
