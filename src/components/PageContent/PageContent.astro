---
import FallbackNotice from '../FallbackNotice.astro';

import AuthorList from '~/components/AuthorList.astro';

import Breadcrumb from '@aziontech/webkit/breadcrumb';
import ReadableContent from '@aziontech/webkit/readablecontent';
import ArticleNavigation from '@aziontech/webkit/articlenavigation';

import { rtlLanguages } from '~/i18n/languages';
import { normalizeLangTag } from '~/i18n/bcp-normalize';
import { useTranslations } from '~/i18n/util';

import { getLanguageFromURL } from '~/util';
import { getPageBreadcrumb } from '~/util/getBreadcrumb';


export interface Props {
	content: { title: string };
	fileToGetContributors: string;
	previous?: { text: string; link: string };
	next?: { text: string; link: string };
}

const {content, fileToGetContributors, previous, next} = Astro.props;
const lang = getLanguageFromURL(Astro.url.pathname);
const isFallback = !!Astro.params.fallback || undefined;

const title = content.title
const bcpLang = normalizeLangTag(lang);
const direction = rtlLanguages.has(lang) ? 'rtl' : 'ltr';
const breadcrumbs = (await getPageBreadcrumb(Astro, lang));
const t = useTranslations(Astro);
---


<div dir={isFallback ? 'ltr' : direction} lang={isFallback && 'en'}>
	<!-- {
		// For best cross-browser support of sticky or fixed elements, they must not be nested
		// inside elements that hide any overflow axis. The article hides `overflow-x`,
		// so we must place fixed UI elements like the mobile TOC here.
		Astro.slots.has('before-article') && (
			<>
				<div class="fixed-mobile-bar" dir={direction}>
					<slot name="before-article" />
				</div>
				<div class="spacer" />
			</>
		)
	} -->
	<article>
		<section class="px-container">
			<ReadableContent>
				<header>
					<div class="mb-8 mt-2">
						<Breadcrumb data={breadcrumbs} />
					</div>
					
					<h1 id="overview" set:html={title} />
				</header>
				
				{
					isFallback && (
						<div lang={bcpLang} dir={direction}>
							<FallbackNotice />
						</div>
					)
				}
			
				<slot />
				
				<hr />
			</ReadableContent>
		</section>

		<div class="px-container pt-12 pb-6">
			<div class="flex flex-col gap-6">
				<p class="text-base text-lg">
					<strong class="font-medium">
						{
							t('contributors.title')
						}
					</strong>
				</p>	
				<AuthorList filePath={fileToGetContributors} />
			</div>
		</div>
	
		{
			(previous || next) && (
				<aside class="px-container py-12">
					<ArticleNavigation
						cards={{
							prev: previous,
							next: next,
						}}
						overline={
							{ 
								prev: t('articleNav.prevPage'),
								next: t('articleNav.nextPage')
							}
						}
					/>
				</aside>
			)
		}
	</article>
</div>
