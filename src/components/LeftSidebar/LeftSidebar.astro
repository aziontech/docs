---
import { removeLeadingSlash } from '../../util';
import { getNavigationMenu } from '../../util/getNav';
import { useTranslations } from '../../i18n/util';
import SidebarContent from './SidebarContent.astro';
import CommunityMenu from '../RightSidebar/CommunityMenu.astro';


export interface Props {
	currentPage: string;
	menuType: string;
}

const t = useTranslations(Astro);

const { currentPage, menuType = 'nav' } = Astro.props as Props;
const currentPageMatch = removeLeadingSlash(currentPage);

const sidebarSections = (await getNavigationMenu(Astro, menuType)).reduce((collection, item) => { 
	collection.push({...item}) 
	return collection
}, [] as Parameters<typeof SidebarContent>[0]['sidebarSections']);

let activeTab: 'learn' = 'learn';
---

	<nav aria-label={t('leftSidebar.a11yTitle')}>
		<ul class={`nav-groups`}>
			<SidebarContent
				type={'learn'}
				defaultActiveTab={activeTab}
				sidebarSections={sidebarSections}
				currentPageMatch={currentPageMatch}
			/>
			<li>
				<CommunityMenu hideOnLargerScreens={true} />
			</li>
		</ul>
	</nav>

<!-- Preserve sidebar scroll across page loads -->
<script is:inline>
{
	const leftSidebar = document.querySelector('.nav-groups');
	const leftSidebarScroll = localStorage.getItem('sidebar-scroll');
	if (leftSidebarScroll !== null) {
		leftSidebar.scrollTop = parseInt(leftSidebarScroll, 10);
	}
	window.addEventListener('beforeunload', () => {
		localStorage.setItem('sidebar-scroll', leftSidebar.scrollTop);
	});
}
</script>

<style lang="scss">
	nav {
		height: 100%;
		font-size: 1rem;
		overflow-x: hidden;
		scrollbar-gutter: stable;
	}

	.fixed-group {
		position: absolute;
		padding: 2rem 1.5rem;
		bottom: 0;
		list-style: none;
		z-index: 11;
		background-color: var(--theme-bg);
	}
	.fixed-group-title {
		margin: 0;
		padding: 0;

		a {
			color: var(--theme-text);
			text-decoration: none;
			line-height: 140%;
			font-size: 1rem;
		}

		&:hover,
		&:focus {
			background-color: var(--theme-bg-accent);
			border-radius: 4px;
		}
	}

	.nav-groups {
		width: 100%;
		padding-left: 2px;
	}

	@media not screen and (min-width: 50em) {

		.nav-groups {
			padding-top: 1rem;
		}
		nav :global(.TabGroup) {
			display: none;
		}
	}
</style>
