---
import { getLanguageFromURL } from '~/util';
import { isSubPage, isSubMenu } from '~/util/isSubPage';
import { modelSlug } from '~/util';
import ExternalLinkIcon from '~/components/icons/ExternalLinkIcon';
import MenuItems from './SidebarContent';
import './SidebarContent.scss';
import type { NavDict } from '~/i18n/translation-checkers';
import UIString from '~/components/UIString.astro';

export interface Props {
  type: TabType;
  defaultActiveTab: TabType;
  sidebarSections: NavDict;
  currentPageMatch: string;
}
type TabType = 'learn';

const { type, defaultActiveTab, sidebarSections, currentPageMatch } = Astro.props as Props;
const lang = getLanguageFromURL(Astro.url.pathname);
---
{
  sidebarSections.map(({ onlyMobile, anchor, slug, isFallback, text, children, addBorder, hasLabel }) => {
    const summaryClass = onlyMobile && anchor ? 'hide-item-desktop' : '';
    return (	
      <li class:list={['nav-group', type, defaultActiveTab === type && 'active', summaryClass, addBorder === true && 'list-border-bottom']}>
				{hasLabel ? (
				<p class="overline"><UIString key={hasLabel}/></p>
				): null}
        {anchor ? (
          <div class="nav-group-title" data-current-parent={isSubPage(currentPageMatch, slug, lang) ? 'true' : 'false'}>
            <h2 class="nav-link-title">
              <a
								data-current-parent={isSubPage(currentPageMatch, slug, lang) ? 'true' : 'false'}
                href={modelSlug(slug, isFallback, lang)}
                target={slug?.includes('https') ? '_blank' : '_self'}
              >
                <Fragment set:html={text} />
              </a>
              {slug?.includes('https') && <ExternalLinkIcon color="var(--theme-text)" />}
            </h2>
          </div>
        ) : (
          <details id="primary-dropdown" open={isSubMenu(currentPageMatch, lang, children) ? true : false}>
            <summary class="nav-group-title">
              <h2 class={isSubMenu(currentPageMatch, lang, children) ? 'focus-item' : ''}>
                {text}
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  viewBox="0 1 16 16"
                  width="16"
                  height="16"
                  aria-hidden="true"
                >
                  <path 
									fill-rule="evenodd"
									d="M6.22 3.22a.75.75 0 011.06 0l4.25 4.25a.75.75 0 010 1.06l-4.25 4.25a.75.75 0 01-1.06-1.06L9.94 8 6.22 4.28a.75.75 0 010-1.06z" />
                </svg>
              </h2>
            </summary>
            <MenuItems
              data={children}
              lang={lang}
              currentPageMatch={currentPageMatch}
            />
          </details>
        )}
      </li>
    );
  })
}

<script>
  const detailsElements = document.querySelectorAll<HTMLDetailsElement>('#primary-dropdown');

		detailsElements.forEach((details) => {
		if (details.tagName === 'DETAILS') {
			details.addEventListener('click', () => {
				detailsElements.forEach((otherDetails) => {
					if (otherDetails !== details && otherDetails.open) {
						otherDetails.open = false;
					}
				});
			});
		}
  });
</script>
