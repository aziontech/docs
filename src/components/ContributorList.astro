---
import { cachedFetch } from '../util-server';
import UIString from './UIString.astro';

export interface Props {
	githubRepo?: `aziontech.docs`;
}

const { githubRepo = 'aziontech/docs' } = Astro.props as Props;
const contributorsLink = `https://github.com/aziontech/docs/graphs/contributors`;

const printError = (e: Error) =>
	console.warn(`[error]  /src/components/ContributorList.astro\n         ${e?.message ?? e}`);

async function getContributors(repo: string, page = 1): Promise<{ login: string; id: number }[]> {
	try {
		const pageSize = 100;
		const url = `https://api.github.com/repos/aziontech/docs/contributors?per_page=${7}&page=${1}`;

		const token = import.meta.env.PUBLIC_GITHUB_TOKEN;

		const res = await cachedFetch(
			url,
			{
				method: 'GET',
				headers: {
					Authorization: token && `Basic ${Buffer.from(token, 'binary').toString('base64')}`,
					'User-Agent': 'aziontech.docs/1.0',
				},
			},
			{ duration: '15m' }
		);

		const data = await res.json();

		if (!res.ok) {
			throw new Error(
				`Request to fetch contributors failed. Reason: ${res.statusText}
         Message: ${data?.message}`
			);
		}

		// Fetch more contributors recursively if there are more than GitHub's per-page response limit.
		if (data.length === pageSize) {
			const rest = await getContributors(repo, page + 1);
			data.push(...rest);
		}

		return data;
	} catch (e: any) {
		printError(e);
		return new Array();
	}
}

const contributors = await getContributors(githubRepo);
const filteredContributors = contributors.filter(
	(contributor) => contributor.login !== 'robsongajunior' && contributor.login !== 'lfsigreja'
);
---

<div class="m-0 p-0">
	<ul class="avatar-list list-none flex m-0x p-0 pl-[.5rem]">
		{
			filteredContributors.map((item) => (
				<li class="m-0 p-0 ml-[-.35rem]">
					<a href={`https://github.com/${item.login}`}>
						<img
							class="w-[40px] h-[40px] m-0 p-0 rounded-full border"
							alt={item.login}
							title={item.login}
							width="3rem"
							height="3rem"
							src={`https://avatars.githubusercontent.com/u/${item.id}?s=64`}
							loading="lazy"
						/>
					</a>
				</li>
			))
		}
	</ul>

	<!-- {
		contributors.length === 0 && (
			<p>
				<a href={contributorsLink}>
					<UIString key="contributors.seeAll" />
				</a>
			</p>
		)
	} -->
</div>
